@model IEnumerable<IItem>
@{
    var contextID = Guid.NewGuid();
    var hideControls = (ViewData["HideControls"] != null && ViewData["HideControls"].CanBeParsedAs<bool>()) ? (bool)ViewData["HideControls"] : false;
}

<div data-widget="cart" id="view-cart-@contextID" class="view-cart">

    @if (Model.Count() > 0)
    {
        <div class="row margin-10 text-uppercase text-muted text-xs">
            <div class="col-xs-8">@Resources.Common.Items</div>
            <div class="col-xs-2 text-right">@Resources.Common.Price</div>
            <div class="col-xs-2 text-center">@Resources.Common.Quantity</div>
        </div>
        <div class="space-10"></div>

        foreach (var item in Model)
        {
            var itemCodeForDetail = (item.GroupMasterItemCode.IsNotNullOrEmpty()) ? item.GroupMasterItemCode : item.ItemCode;

            <div class="row margin-10" data-id="@item.ID">
                <div class="col-xs-8">
                    <div class="row">
                        <div class="col-sm-2">
                            <div class="image">
                                <a href="@Url.Action("itemdetail", new { itemcode = itemCodeForDetail })"><img src="@item.TinyImageUrl" class="img-responsive" /></a>
                            </div>
                        </div>
                        <div class="col-sm-10">
                            <div class="itemdescription">
                                <a href="@Url.Action("itemdetail", new { itemcode = itemCodeForDetail })">@item.ItemDescription</a>
                            </div>
                            <small class="text-muted">@Resources.Common.SKU: @item.ItemCode</small>
                        </div>
                    </div>
                </div>
                <div class="col-xs-2 text-right">
                    @item.Price.ToString("C")
                </div>
                <div class="col-xs-2 text-center">
                    <input type="hidden" name="ID" value="@item.ID" />
                    @if (hideControls)
                    {
                        <span>@item.Quantity.ToString("0")</span>
                    }
                    else
                    {
                        @Html.TextBoxFor(c => item.Quantity, new
                        {
                            type = "number",
                            @class = "form-control input-sm text-center",
                            data_role = "cart.updateitemquantity",
                            data_id = item.ID,
                            Value = Convert.ToInt32(item.Quantity).ToString("0"),

                        })
                    }
                    @if (!hideControls)
                    {
                        <small class="remove"><a class="text-muted" data-role="cart.removeitemfromcart" data-id="@item.ID">@Resources.Common.Remove</a></small>
                    }
                </div>
            </div>
            <div class="space-10"></div>
        }
    }
    else
    {
        <p>@Resources.Common.NoItemsInCart</p>
    }
</div>


@using (Html.BeginPartialScript())
{
    <script>
        require(["jquery", "shopping", "pubsub"], function ($, shopping) {

            // Settings
            var context = "#view-cart-@contextID",
                $context = $(context);

            shopping.bind(context);

            window.on('cart.itemremoved', function (id) {                
                $('[data-id="{0}"]'.format(id), $context).slideUp('fast', function () {
                    $(this).remove();
                });
            });
        });
    </script>
}