@model ResourceCategoryListViewModel
@{
    ViewBag.Title = "Manage Resource Categories";

    var currentCulture = System.Globalization.CultureInfo.GetCultureInfo(System.Threading.Thread.CurrentThread.CurrentCulture.Name);
    var catID = Guid.Empty;
}

<div id="resourceCategoryManager">
    <h2>
        @ViewBag.Title
        <span class="pull-right">
            <a id="categorybutton" class="btn btn-primary" data-toggle="modal">@Resources.Common.CreateNewCategory</a>
            <a class="btn btn-primary" href="@Url.Action("manageresources","resources")">@Resources.Common.ManageResources</a>
        </span>
        <span class="clearfix"></span>
    </h2>

    <div class="row">
        <div class="col-lg-3">
            <div class="panel hidden-xs">
                <div class="panel-heading">@Resources.Common.ToolTips</div>
                <ul class="list-group">
                    <li class="list-group-item"><small>@Resources.Common.ClickingOnThe <span class="fa fa-times-circle"></span> @Resources.Common.WillPerDelete </small></li>
                    <li class="list-group-item"><small>@Resources.Common.IfYouDelete</small></li>
                    <li class="list-group-item"><small>@Resources.Common.WhenCreatingEditing</small></li>
                    <li class="list-group-item"><small>@Resources.Common.IfAResource</small></li>
                    <li class="list-group-item"><small>@Resources.Common.DragAndDropResources </small></li>
                </ul>

            </div>
        </div>

        <div class="col-lg-9">
            <div class="well well-sm categories clearfix">
                <h4>@Resources.Common.ResourceCategories</h4>
                <div class="table-responsive">
                    <table class="table table-hover table-bordered">
                        <thead>
                            <tr class="active">
                                <th class="row-move"><i class="fa fa-arrows"></i></th>
                                <th class="descriptionHeader">@Resources.Common.Description</th>
                                <th class="actionsHeader">@Resources.Common.Actions</th>
                            </tr>
                        </thead>
                        <tbody data-sort-group="@CustomSortGroups.ResourceCategories"
                               data-parent-ID="0"
                               data-save-url="@Url.Action("SaveResourceCategorySort", "CustomSort")">
                            @foreach (var category in Model.ResourceCategories.Where(c => c.ParentID == Guid.Empty))
                            {
                                <tr data-sort-node="@category.CategoryID">
                                    <td><i class="fa fa-bars sortable-handle"></i></td>
                                    <td class="black-font">
                                        @category.CategoryDescription
                                        @if (category.HasChildren)
                                        {
                                            <a class="bigger-icon editSubcategories" data-id="@category.CategoryID" title="View Subcategories">(@Resources.Common.ViewSubcategories)</a>
                                        }
                                    </td>
                                    <td>
                                        <a class="bigger-icon editCategory" data-id="@category.CategoryID" data-parent="@Guid.Empty" title="@Resources.Common.Edit"><i class="fa-pencil-square"></i></a>
                                        <a class="bigger-icon deleteCategory" data-id="@category.CategoryID" title="@Resources.Common.Delete"><i class="fa-times-circle"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
                <button class="btn-category-sort btn btn-success pull-right" data-sort-target="0">@Resources.Common.SaveSortOrder</button>
            </div>

            <div class="subcategories-container">
                <!-- loaded dynamically -->
            </div>

        </div>
    </div>




</div>
<!-- Modal -->
<div id="categoryModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="modal-target">


        </div>
    </div>
</div>
<script>



    require(["jquery", "ajax", "jquery-ui", "toastr", "customsort"], function ($, ajax, jqueryui, toastr, customsort) {
        var context = $("#resourceCategoryManager");

        $(function () {
            context.on('click', '#categorybutton', function () {
                getModal();
            });

            context.on('click', '.editCategory', function () {
                var categoryID = $(this).data("id");
                var parentID = $(this).data("parent");
                editCategory(categoryID, parentID);
            });

            context.on('click', '.deleteCategory', function () {
                var categoryID = $(this).data("id");
                deleteCategory(categoryID);
            });

            context.on('click', '.editSubcategories', function () {
                var parentCategoryID = $(this).data("id");
                showSubcategories(parentCategoryID);
            });
        });

        function getModal() {
            var categoryID = "@catID";
            var parentID = "@Guid.Empty.ToString()";
            ajax.json({
                url: '@Url.Action("getmodal","resources")',
                data: { categoryID: categoryID, parentCategoryID: parentID },
                success: function (response) {
                    if (!response.success) {
                        console.log(response.message);
                        return;
                    }
                    var $html = $("#modal-target");
                    $html.html(response.html);
                    $("#categoryModal").modal();


                },
                error: function (response) {
                    console.log(response.message, "Error");
                }
            });
        }
        function editCategory(categoryID, parentID) {

            ajax.json({
                url: '@Url.Action("getModal","resources")',
                data: { categoryID: categoryID, parentCategoryID: parentID },
                success: function (response) {
                    if (!response.success) {
                        console.log(response.message);
                        return;
                    }
                    var $html = $("#modal-target");
                    $html.html(response.html);
                    $("#categoryModal").modal();


                },
                error: function (response) {
                    console.log(response.message, "Error");
                }
            });
        }

        function deleteCategory(categoryID, parentID) {

            ajax.json({
                url: '@Url.Action("deletecategory", "resources")',
                data: {categoryID : categoryID},
                success: function (response) {
                    if (response.success) {
                        location.reload();
                    }
                },
                error: function (response) {
                    console.log(response.message, "Error");
                }
            });
        }

        function showSubcategories(parentCategoryID) {
            ajax.json({
                url: '@Url.Action("loadCategories","resources")',
                data: {
                    parentCategoryID: parentCategoryID
                },
                success: function (response) {
                    if (response.success) {
                        var $subContainer = $('.subcategories-container');
                        $subContainer.html(response.html);

                        customsort.init($subContainer.find("[data-sort-group]"));
                    }
                    else {
                        toastr.alert("@Resources.Common.ProblemLoadingSubcategories");
                    }
                }
            });
        }
    });
</script>
