@model List<DownlineRankCountViewModel>
@{
    ViewBag.Title = Resources.Common.DownlineRanks;
}


<h2>@ViewBag.Title</h2>

<div class="row">
    <div class="col-sm-3">
        @Html.Navigation()
    </div>

    <div class="col-sm-9">


        <div class="row">
            <div class="col-md-3 col-md-push-9 col-sm-12">
                <ul class="list-group">
                    @foreach (var rank in Model)
                    {
                        var percentTotal = (Convert.ToDecimal(rank.Total) / Convert.ToDecimal(Model.Sum(c => c.Total))) * 100M;
                        if (percentTotal < 1M) { percentTotal = 0.5M; }

                        <li class="list-group-item">
                            <a href="@Url.Action("DownlineRanksList", "organization", new { rankid = rank.Rank.RankID})">
                                <div class="media">
                                    <div class="pull-left">
                                        <div class="no-margin">@CommonResources.Ranks(rank.Rank.RankID, defaultDescription: rank.Rank.RankDescription)</div>
                                    </div>
                                    <div class="media-body text-right">
                                        <strong class="media-heading no-margin">@rank.Total.ToString("N0")</strong>
                                    </div>
                                </div>
                            </a>
                            <div class="space-5"></div>
                            <div class="progress progress-xs no-background">
                                <div class="progress-bar" role="progressbar" aria-valuenow="@percentTotal" aria-valuemin="0" aria-valuemax="100" style="width: @percentTotal%;"></div>
                            </div>

                        </li>
                    }
                </ul>

            </div>

            <div class="col-md-9 col-md-pull-3 col-sm-12">
                <div id="grid">
                </div>
            </div>
        </div>
    </div>
</div>




    <script>
        require(["kendogrids"], function (kendoGrid) {

            var cultureCode = "@Identity.Current.Market.CultureCode";
            kendo.culture(cultureCode);


            kendoGrid.create("#grid", {
                columns: [
                    { field: "CustomerID", width: 35, title: " ", type: "string", template: "<a data-profile='modal' data-id='#:CustomerID#' data-token='#:CustomerIDToken#' style='cursor: pointer;'><img src='/Content/images/contactcard.png' /></a>", sortable: false, filterable: false },
                    { field: "CustomerID", title: "@Resources.Common.ID", type: "string", width: 75 },
                    { field: "FirstName", title: "@Resources.Common.FirstName", type: "string", width: 125 },
                    { field: "LastName", title: "@Resources.Common.LastName", type: "string", width: 125 },
                    { field: "RankDescription", title: "@Resources.Common.Rank", type: "string" },
                    //{ field: "CreatedDate", title: Resources.Common.StartDate, type: "date", format: "{0:d}", attributes: { "class": "text-right" } }
                ]
            });
        });
</script>
